\documentclass{beamer}
\usetheme{focus}
\usepackage[utf8]{inputenc}
\usepackage{polski}
\usepackage{amsfonts}
\usepackage{amsmath}
\usepackage{natbib}
\usepackage{graphicx}
\usepackage{array,booktabs,tabularx}
\usepackage{epstopdf}
\usepackage{colortbl, xcolor}
\usepackage{url}

\newcommand\Fontvi{\fontsize{6}{7.2}\selectfont}

\newcommand{\btVFill}{\vskip0pt plus 1filll}

\title{AmyloGram: Analysis of proteins in R}
\date{}
\author{Jarek Chilimoniuk}
\institute{Department of Bioinformatics and Genomics, University of Wrocław \\
}

\begin{document}

  <<knitrIntro, echo = FALSE, message=FALSE,warning=FALSE>>=
source("my_ggplot_theme.R")

library(dplyr)
library(reshape2)
library(xtable)
library(biogram)
library(seqinr)
library(VennDiagram)
  
source("script.R")  

print_bt <- function(x) {
  rws <- 0L:(nrow(x) - 1)
  col <- c("\\rowcolor{green!10}", "\\rowcolor{blue!10}", "\\rowcolor{red!10}", "\\rowcolor{yellow!10}")
  print(xtable(x, digits = 0), booktabs = TRUE,
        add.to.row = list(pos = as.list(rws), command = col),
        print.results = FALSE)
}

print_bt2 <- function(x) {
  rws <- seq(1, nrow(x) - 1, by = 2)
  col <- rep("\\rowcolor[gray]{0.85}", length(rws))
  print(xtable(x, digits = 0), booktabs = TRUE,
        add.to.row = list(pos = as.list(rws), command = col),
        print.results = FALSE, include.rownames = FALSE)
}  
  
cls <- c("\\colorbox{green!10}", "\\colorbox{blue!10}", "\\colorbox{red!10}", "\\colorbox{yellow!10}")

group2df <- function(group_list, caption = NULL, label = NULL) {
  tab <- data.frame(Groups = sapply(group_list, function(i)
    paste0(toupper(sort(i)), collapse = ", ")))
  tab <- cbind(ID = 1L:nrow(tab), tab)
  rws <- seq(1, nrow(tab) - 1, by = 2)
  col <- rep("\\rowcolor[gray]{0.85}", length(rws))
  colnames(tab) <- c("Subgroup ID", "Amino acids")
  res <- print(xtable(tab, caption = caption, label = label), 
               include.rownames = FALSE, booktabs = TRUE,
               add.to.row = list(pos = as.list(rws), command = col), print.results = FALSE, 
               caption.placement = "top", sanitize.text.function = identity, 
               sanitize.rownames.function = identity)
  #res
  print(xtable(tab))
}  
  
amyloids_plot <- read.csv("amyloid_plot_data.csv")

levels(amyloids_plot[["et"]]) <- c("Best-performing simplified alphabet", 
                                   "simplified alphabet", "Full alphabet", 
                                   "Standard simplified alphabet")


amyloids_plot[["len_range"]] <- factor(amyloids_plot[["len_range"]], 
                                       levels = c("Test peptide length: 6 ", "Test peptide length: 7-10", 
                                                  "Test peptide length: 11-15", "Test peptide length: 16-25"))

subdat <- filter(amyloids_plot, pos == "Training peptide length: 6")

best_enc <- list(c("G"), 
                 c("K", "P", "R"),
                 c("I", "L", "V"),
                 c("F", "W", "Y"),
                 c("A", "C", "H", "M"),
                 c("D", "E", "N", "Q", "S", "T"))
names(best_enc) <- 1L:6


@
  

\maketitle

\begin{frame}{Presentation plan}

\tableofcontents

\end{frame} 

\section{Aminoacids and proteins}

\begin{frame}{Aminoacids}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/aminoacids.png}
\end{figure}

% Source: \url{https://www.compoundchem.com/2014/09/16/aminoacids/}

\end{frame}

\begin{frame}{Aminoacids}

<<echo = FALSE, message=FALSE,warning=FALSE,fig.height=3.5,results='asis'>>=
library(biogram)
library(reshape2)

dat <- aaprop[c("ARGP820101", "DAWD720101", "EISD840101", "GOLD730102"), ]
melt(dat) %>% 
  mutate(Var2 = toupper(Var2)) %>% 
  ggplot(aes(x = Var2, y = Var1, fill = value)) +
  geom_tile(color = "black") +
  scale_x_discrete("Aminoacid")+
  scale_y_discrete("Feature") +
  scale_fill_gradient("Standardised value",
                      low = "#f7fcb9", high = "#31a354") +
  my_theme

@

\end{frame} 

\begin{frame}{Proteins}

\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/aminokwasy.eps}
\end{figure}

\end{frame} 


\begin{frame}{Proteins}

\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/aminokwasy2.eps}
\end{figure}

\end{frame} 

\begin{frame}{Proteins}

\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/aminokwasy2.eps}
\end{figure}

% Struktura wyższych rzędów określa funkcję białka.
Protein higher order structures determines its function.

\end{frame} 

\begin{frame}{Human proteom}

<<echo = FALSE, message=FALSE,warning=FALSE,fig.height=3.5,results='asis'>>=
library(waffle)

parts <- data.frame(
  names = c("Unknown role", "Known role"),
  vals = c(1937/100, (20230 - 1937)/100)
)

waffle(
  setNames(c(1937/100, (20230 - 1937)/100), 
           c("Unknown role", "Known role")), 
  rows = 8, size = 1, 
  colors = c("black", "#1879bf"), legend_pos = "bottom"
)

@

1937 human proteins have unknown role (dark proteome) (Young-Ki Paik et al., 2018).

\end{frame} 



\begin{frame}{Goal} 

% Opracowanie metod przewidywania właściwości białek na podstawie ich struktury pierwszorzędowej w sposób zrozumiały dla biologów i weryfikowalny eksperymentalnie.

Development of methods for predicting protein properties on the basis of their primary structure in a way that is understandable for biologists and experimentally validated.

\end{frame}   

\section{n-grams and simplified alphabets}

\begin{frame}
n-grams (k-tuple, k-mers):
\begin{itemize}
\item subsequences (continuous or discontinuous)  $n$ aminoacid or nucleotide residues,
\item more informative than the individual residues.
\end{itemize}
\end{frame}  

\begin{frame}

<<echo = FALSE, message=FALSE,warning=FALSE>>=

seq1 <- c("f", "k", "v", "w", "p", "d", "h", "g", "s", "g")
seq2 <- c("y", "m", "c", "i", "y", "r", "a", "q", "t", "n")

sample_seq <- matrix(toupper(c(seq1, seq2)), ncol = 10, byrow = TRUE)

generate_ngrams <- function(x){
  decode_ngrams(x) %>% 
  gsub("_", "-", x = .) %>% 
  paste0(paste0('\\textcolor{',  colors, '}{\\texttt{'), .) %>% 
  paste0(., "}}") %>% 
  .[1L:4] %>% 
  paste0(collapse = ", ")}

colors <- c("red", "blue")

przyklady <- list(seq2ngrams(sample_seq, 1, aa_v, d = 0), 
                  seq2ngrams(sample_seq, 2, aa_v, d = 0), 
                  seq2ngrams(sample_seq, 2, aa_v, d = 1), 
                  seq2ngrams(sample_seq, 3, aa_v, d = c(2, 0)))

colored_ngrams <- lapply(przyklady, generate_ngrams) 


@

Peptide I: \textcolor{red}{\texttt{\Sexpr{toupper(paste0(seq1, collapse = ""))}}}

Peptide II: \textcolor{blue}{\texttt{\Sexpr{toupper(paste0(seq2, collapse = ""))}}}

\medskip

n-gram examples from peptide I and II:

\begin{enumerate}
    \item 1-gram: \Sexpr{colored_ngrams[[1]]},
    \item 2-gram: \Sexpr{colored_ngrams[[2]]},
    \item 2-gram (discontinuous): \Sexpr{colored_ngrams[[3]]},
    \item 3-gram (discontinuous): \Sexpr{colored_ngrams[[4]]}.
\end{enumerate}

\end{frame}



\begin{frame}
<<echo = FALSE, message=FALSE,warning=FALSE,fig.height=4.5,results='asis'>>=
L <- 1
m <- 20 
m2 <- 6
n <- 1:5
n_max <- L*m^n
n_max2 <- L*m2^n
#dat <- data.frame(n = c(n, n), n_max = c(n_max, n_max2), m = c(rep(m, 5), rep(m2, 5)))
dat <- data.frame(n = n, n_max = n_max, m = rep(m, 5))
dat[["m"]] <- factor(dat[["m"]])

ggplot(dat, aes(x = n, y = n_max, color = m, label = formatC(n_max, digits = 4))) + 
  geom_line(linetype="dotted", size=1.5) + 
  geom_point(size=4, shape=16) +
  geom_text(size = 4, vjust = -1.5, hjust = "inward", color = "red") +
  coord_cartesian(ylim = c(1, 4.5e7)) +
  scale_x_continuous("Length of continuous n-gram (n)", breaks = 0L:5) +
  scale_y_continuous("Number of potential n-grams (logarithmic scale)",
                     trans = "log10") +
  scale_color_discrete("Size of the alphabet") +
  my_theme
@

% Dłuższe n-gramy są bardziej informatywne, ale tworzą większe przestrzenie atrybutów, które są trudniejsze do analizy.
Longer n-games are more informative, but create larger attribute spaces that are more difficult to analyze.

\end{frame}

\begin{frame}{slam: Sparse Lightweight Arrays and Matrices}

% S3, szybsze i wydajniejsze niż matrix

Counting n-grams creates sparse matrices, that are causing dimensional problems. 

<<echo = FALSE, message=FALSE,warning=FALSE,fig.height=3.6,results='asis'>>=
library(slam)
library(xtable)
library(ggplot2)

xtable(do.call(rbind, lapply(10^(0L:4), function(i) {
  m <- diag(1, i)
  data.frame(m = i,
             storage = c("base", "slam"),
             value = c(format(object.size(m), units = "Mb", digits = 6),
                       format(object.size(as.simple_triplet_matrix(m)), units = "Mb", digits = 6)))
}))
)

p <- do.call(rbind, lapply(10^(0L:4), function(i) {
  m <- diag(1, i)
  data.frame(m = i,
             storage = c("base", "slam"),
             value = c(format(object.size(m), units = "Mb", digits = 6),
                       format(object.size(as.simple_triplet_matrix(m)), units = "Mb", digits = 6)))
}))

conversion <- as.numeric(lapply(p$value, function(i) {gsub(" Mb", "", i)}))

p[["value"]] <- conversion
p[["m"]] <- as.character(p[["m"]])

p %>% ggplot(aes(x = m, y = value, color = storage)) +
  geom_point() +
  geom_line() + 
  theme_bw()

# format(object.size(as.simple_triplet_matrix(diag(1, 500))), units = "Kb")

# format(object.size(diag(1, 10^5)), units = "Mb", digits = 6)
# Error: cannot allocate vector of size 74.5 Gb
# 
# format(object.size(diag(1, 10^6)), units = "Mb", digits = 6)
# Error: cannot allocate vector of size 7450.6 Gb
@

\end{frame}

\begin{frame}{QuiPT}  

<<echo = FALSE, message=FALSE,warning=FALSE,fig.height=3.6,results='asis'>>=
load("data/times2.RData")

times_dat <- do.call(rbind, lapply(times, function(i) 
  t(sapply(i, function(j) {
    c(slow = unname(j[["slow"]]["elapsed"]),
      quick = unname(j[["quick"]]["elapsed"]))
  }))
)) %>% 
  data.frame %>% 
  mutate(size = sort(rep(1L:5*10, 10))) %>% 
  melt(id.vars = "size") %>% 
  group_by(size, variable) %>% 
  summarise(value = mean(value)) %>% 
  ungroup %>% 
  mutate(variable = factor(variable, labels = c("Permutation test", "QuiPT")))

ggplot(times_dat, aes(x = size, y = value, color = variable)) +
  geom_point(size = 4) +
  geom_line(linetype = "dotted") +
  scale_y_continuous("Time [s]") +
  scale_x_continuous("Number of tested n-grams") +
  scale_color_manual("Test", values = c("red", "blue")) +
  my_theme
@

QuiPT (avaible as function in \textbf{biogram} package) is faster than classic permutation tests.
\end{frame}

\begin{frame}{Simplified alphabets}
Simplified alphabets:
\begin{itemize}
\item amino acids are grouped into larger yields on the basis of specific criteria,
\item easier anticipation of structures~\citep{murphy_simplified_2000},
\item creation of more generalised models.
\end{itemize}
\end{frame}


\begin{frame}{Simplified alphabets}
Following peptides appear to be completely different in terms of amino acid composition.

Peptide I: 

\texttt{\Sexpr{toupper(paste0(seq1, collapse = ""))}}

\medskip

Peptide II: 

\texttt{\Sexpr{toupper(paste0(seq2, collapse = ""))}}

\end{frame}  


\begin{frame}
<<echo = FALSE, message=FALSE,warning=FALSE,fig.height=4.5,results='asis'>>=
seq_dat <- rbind(data.frame(seq = "Sequence I", pos = 1L:10, 
                            aa = seq1, val = aaprop["ARGP820101", seq1]),
                 data.frame(seq = "Sequence II", pos = 1L:10, 
                            aa = seq2, val = aaprop["ARGP820101", seq2])) %>% 
  mutate(hydroph = val < 0.4)

ggplot(seq_dat, aes(x = factor(pos), y = val, label = toupper(aa), 
                    group = seq, colour = hydroph)) +
  geom_text(vjust = "outward", size = 4.8, show_guide = FALSE, fontface = "bold") +
  #geom_point(size = 0) +
  geom_line(linetype = "dotted", color = "black") +
  facet_wrap(~ seq, ncol = 1) +
  scale_x_discrete("Position") +
  scale_y_continuous("Hydrophobicity (Argos et al., 1982)", expand = c(.1, .1)) +
  scale_color_manual(values = c("green", "orange")) +
  #guides(colour = guide_legend(override.aes = list(size=4))) +
  my_theme 
@

\end{frame}  

\begin{frame}
\begin{table}
\begin{tabular}{cl}
\toprule
Group & Aminoacids \\ 
\midrule
 \textcolor{green}{1} & \textcolor{green}{C, I, L, K, M, F, P, W, Y, V} \\ 
 \textcolor{orange}{2} & \textcolor{orange}{A, D, E, G, H, N, Q, R, S, T} \\ 
\bottomrule
\end{tabular}
\end{table}

\begin{columns}
\begin{column}{0.2\textwidth}
 
Peptide I: 

Peptide II: 

\end{column}
\begin{column}{0.1\textwidth}

\texttt{\textcolor{green}{\Sexpr{toupper(paste0(seq1[1L:5], collapse = ""))}}}\texttt{\textcolor{orange}{\Sexpr{toupper(paste0(seq1[6L:10], collapse = ""))}}} 

\texttt{\textcolor{green}{\Sexpr{toupper(paste0(seq2[1L:5], collapse = ""))}}}\texttt{\textcolor{orange}{\Sexpr{toupper(paste0(seq2[6L:10], collapse = ""))}}} 

\end{column}
\begin{column}{0.02\textwidth}  %%<--- here

\textrightarrow

\textrightarrow
\end{column}
\begin{column}{0.1\textwidth}  %%<--- here

\texttt{\textcolor{green}{\Sexpr{toupper(paste0(rep(1, 5), collapse = ""))}}}\texttt{\textcolor{orange}{\Sexpr{toupper(paste0(rep(2, 5), collapse = ""))}}}

\texttt{\textcolor{green}{\Sexpr{toupper(paste0(rep(1, 5), collapse = ""))}}}\texttt{\textcolor{orange}{\Sexpr{toupper(paste0(rep(2, 5), collapse = ""))}}}
\end{column}
\end{columns}
\end{frame}  



\section{Amyloid prediction}

\begin{frame}{Amyloids}

% Agregaty białek amyloidowe występują w tkankach osób cierpiących na zaburzenia 
% neurodegeneracyjne, takie jak choroba Alzheimera i Parkinsona, a także wiele innych 
% schorzeń.

Amyloid aggregates are found in tissues of people suffering from neurodegenerative disorders such as Alzheimer's disease, Parkinson's disease and many other diseases.

\begin{figure} 
\includegraphics[width=0.61\textwidth]{static_figure/amyloid_aggregates.jpg}
\end{figure}

\footnotesize
Amyloid aggregates (red) around neurons (green). Strittmatter Laboratory, Yale University.

\end{frame}  

\begin{frame}{Amyloids}

% Agregaty białek amyloidowe występują w tkankach osób cierpiących na zaburzenia 
% neurodegeneracyjne, takie jak choroba Alzheimera i Parkinsona, a także wiele innych 
% schorzeń.

\begin{figure} 
\includegraphics[width=1.0\textwidth]{static_figure/amyloid_p.png}
\end{figure}

\footnotesize
Source: National Institute on Aging (NIA) | National Institutes of Health (NIH)

\end{frame}  

  
\begin{frame}{Amyloid proteins}

Peptide sequences with amyloidogenic properties are responsible for the aggregation of amyloidogenic proteins (hot spots):

\begin{itemize}
\item short (6-15 aminoacids),
\item very variable, usually hydrophobic, aminoacid composition,
\item create unique $\beta$-structures.
\end{itemize}

\begin{figure} 
\includegraphics[width=0.9\textwidth]{static_figure/zipper_structure.jpg}
\end{figure}

\footnotesize\citet{sawaya_atomic_2007}
\end{frame}


\begin{frame}{AmyloGram}
AmyloGram: n-gram-based amyloid prediction tool~\citep{burdukiewicz_prediction_2016, BurdukiewiczAmyloidogenicmotifsrevealed2017a}.
\end{frame}


\begin{frame}

\vspace{2cm}

\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/ngram1.eps}
\end{figure}

\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}

  \end{frame}
  
    \begin{frame}{ranger: A Fast Implementation of Random Forests}


% A fast implementation of Random Forests, particularly suited for high dimensional data. 

\resizebox{\textwidth}{!}{%
\begin{tabular}{lcccc}
  \toprule
Package & & Runtime [h] & & Memory usage [GB] \\ 
\toprule
 & & mtry= & & \\
 & 5000 & 15,000 & 135,000 & \\
  \midrule
randomForest & 101.24 & 116.15 & 248.60 & 39.05 \\ 
  \rowcolor{white}randomForest (MC) & 32.10 & 53.84 & 110.85 & 105.77  \\ 
   bigrf & NA & NA & NA & NA \\ 
  \rowcolor{white}randomForestSRC & 1.27 & 3.16 & 14.55 & 46.82  \\ 
 Random Jungle & 1.51 & 3.60 & 12.83 & 0.40 \\ 
  \rowcolor{white}Rborist & NA & NA & NA & >128  \\ 
 ranger & 0.56 & 1.05 & 4.58 & 11.26 \\ 
  \rowcolor{white}ranger (save.memory) & 0.93 & 2.39 & 11.15 & 0.24  \\ 
  ranger (GWAS mode) & 0.23 & 0.51 & 2.32 & 0.23 \\ 
   \bottomrule
\end{tabular}
}

\tiny{Runtime and memory usage for the analysis of a simulated dataset mimicking a
genome-wide association study (GWAS). NA values indicate unsuccessful analyses:\\ 
without disk caching failed because of memory shortage for all mtry values and number of
CPU cores. \\
With disk caching, we stopped bigrf after 16 days of computation.}
\btVFill
\tiny{Marvin N. Wright and Andreas Ziegler. (2017). ranger: A Fast Implementation of Random Forests for High Dimensional Data in C++ and R. Journal of Statistical Software 1, 77}
\end{frame}

    \begin{frame}{ranger: A Fast Implementation of Random Forests}

\begin{figure} 
\includegraphics[width=0.55\textwidth]{static_figure/rangeR.png}
\end{figure}

\tiny{Marvin N. Wright and Andreas Ziegler. (2017). ranger: A Fast Implementation of Random Forests for High Dimensional Data in C++ and R. Journal of Statistical Software 1, 77}

\end{frame}

\begin{frame}{Cross-validation}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=

levels(subdat[["len_range"]]) <- c("Training set (peptides with a length of 6)", 
                                   "Training set (peptides with a length of 7-10)", 
                                   "Training set (peptides with a length of 11-15)", 
                                   "Training set (peptides with a length of 16-25)")

levels(subdat[["et"]]) <-  c("Best-performing simplified alphabet", "Simplified alphabet", 
                             "Full alphabet", "Standard simplified alphabet")

ggplot(subdat, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = NA, outlier.shape = 16, outlier.size = 3, color = NA, fill = NA) +
  geom_point(data = filter(subdat, et == "Full alphabet"), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 3) +
  scale_x_discrete("") +
  scale_y_continuous("Average AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15)[3], drop = TRUE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue")[3], drop = TRUE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Training set (peptides with a length of 6)") + 
  my_theme + 
  coord_flip()

@
%AUC (Area Under the Curve) measures the performance of a classifier (1 - classifier always properly recognizes amyloid proteins, 0 - classifier never properly recognizes amyloid proteins).

\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}

\end{frame}



\begin{frame}{Standard simplified alphabets}
Do standard simplified alphabets developed for different biological issues help to improve amyloid prediction?
\end{frame}

% \begin{frame}{Standardowe uproszczone alfabety}
% Opublikowano kilka uproszczonych alfabetów, które w założeniu miały służyć do opisywania struktur drugo- i trzeciorzędowych białek~\citep{kosiol_new_2004, melo_accuracy_2006}.
%   \end{frame}
  
    \begin{frame}{Standard simplified alphabets}
\vspace{2cm}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/ngram2.eps}
\end{figure}

\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}

  \end{frame}


    \begin{frame}{Standard simplified alphabet}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=
ggplot(subdat, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = NA, outlier.shape = 16, outlier.size = 3, color = NA, fill = NA) +
  geom_point(data = filter(subdat, et %in% c("Full alphabet", "Standard simplified alphabet")), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 3) +
  scale_x_discrete("") +
  scale_y_continuous("Average AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15)[3L:4], drop = TRUE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue")[3L:4], drop = TRUE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Training set (peptides with a length of 6)") + 
  my_theme + 
  coord_flip()

@

Standard aminoacid alphabets do not improve the quality of amyloid prediction.
  
\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}  
  \end{frame}


\begin{frame}{New simplified alphabets}

\begin{itemize}
\item 17 physicochemical parameters selected from AAindex database: 
  \begin{itemize}
    \item size,  
    \item hydrophobicity, 
    \item frequency in $\beta$-sheets,
    \item ability to make contact.
  \end{itemize}
  \item 524 284 simplified aminoacid alphabets of various sizes (from 3 to 6 groups)
  \end{itemize}

\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}
    \end{frame}
  
    \begin{frame}{New simplified alphabets}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/ngram3.eps}
\end{figure}

\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}
  \end{frame}



\begin{frame}{Standard simplified alphabet}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=
subdat2 <- droplevels(filter(subdat, et != "Best-performing simplified alphabet"))

ggplot(subdat2, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = "grey", outlier.shape = 16, outlier.size = 3, color = "black", fill = "white") +
  geom_point(data = filter(subdat2, et %in% c("Full alphabet", "Standard simplified alphabet")), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 3) +
  scale_x_discrete("") +
  scale_y_continuous("Średnie AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15)[2L:4], drop = FALSE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue")[2L:4], drop = FALSE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Training set (peptides with a length of 6)") + 
  my_theme + 
  coord_flip()

@
%  \small
%Hinges of boxes correspond to 
%the 0.25 and 0.75 quartiles. The bar inside the box represents the median. The 
%gray circles correspond to the simplified alphabets with the AUC outside the 0.95 
%confidence interval.
\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}
  
\end{frame}


\begin{frame}{Selection of best-performing simplified alphabet}
<<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=

set.seed(3)
exdat <- data.frame(
  alph = paste0("A", 1L:5), 
  c1 = 0.7 + runif(5)/5,
  c2 = 0.75 + runif(5)/5,
  c3 = 0.65 + runif(5)/5
) %>% 
  melt %>% 
  group_by(variable) %>% 
  mutate(r = rank(value)) %>% 
  ungroup

best_alph <- group_by(exdat, alph) %>%
  summarise(cr = sum(r)) %>%
  arrange(desc(cr)) %>% 
  slice(1) %>% 
  select(alph) %>% 
  unlist %>% 
  as.character

exdat <- mutate(exdat, best = ifelse(alph == best_alph, "yes", "no"))

ggplot(exdat, aes(y = variable, x = value, color = alph)) +
  geom_point(size = 7) +
  scale_x_continuous("AUC") +
  scale_y_discrete("Category", labels = paste0("Category ", 1L:3)) +
  scale_color_discrete("Alphabet") +
  my_theme

@
\end{frame}


\begin{frame}{Selection of best-performing simplified alphabet}
<<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=
ggplot(exdat, aes(y = variable, x = value, color = alph, label = (r - 6)*-1)) +
  geom_text(size = 7) +
  scale_x_continuous("AUC") +
  scale_y_discrete("Category", labels = paste0("Category ", 1L:3)) +
  scale_color_discrete("Alphabet") +
  scale_shape_discrete("best-performing simplified alphabet") +
  my_theme
@
For each category the alphabets have been ranked (rank 1 for the best AUC, etc.). 

\end{frame}

\begin{frame}{Selection of best-performing simplified alphabet}
<<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=
ggplot(exdat, aes(y = variable, x = value, color = alph, shape = best)) +
  geom_point(size = 7) +
  scale_x_continuous("AUC") +
  scale_y_discrete("Category", labels = paste0("Category ", 1L:3)) +
  scale_color_discrete("Alphabet") +
  scale_shape_discrete("best-performing simplified alphabet") +
  my_theme +
  theme(legend.box = "vertical")
@
The best alphabet was the one with the lowest rank sum.

\end{frame}


  
\begin{frame}{Best-performing simplified alphabet}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=

ggplot(subdat, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = "grey", outlier.shape = 16, outlier.size = 3) +
  geom_point(data = filter(subdat, et != "Simplified alphabet"), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 3) +
  scale_x_discrete("") +
  scale_y_continuous("Average AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15), drop = FALSE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue"), drop = FALSE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Training set (peptides with a length of 6)") + 
  my_theme + 
  coord_flip()
@
\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}
\end{frame}

\begin{frame}{Best-performing simplified alphabet}
<<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.height=4>>=
# cat(group2df(best_enc, caption = "The best-performing simplified alphabet."))
@
   \begin{table}[ht]
\centering
\begin{tabular}{rl}
  \toprule
Group & Aminoacids \\ 
  \midrule
  1 & G \\ 
   \rowcolor[gray]{0.85}  2 & K, P, R \\ 
    3 & I, L, V \\ 
   \rowcolor[gray]{0.85}  4 & F, W, Y \\ 
    5 & A, C, H, M \\ 
   \rowcolor[gray]{0.85}  6 & D, E, N, Q, S, T \\ 
   \bottomrule
\end{tabular}
\end{table}
   \btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}
   \end{frame}

     \begin{frame}{Best-performing simplified alphabet}
   \begin{table}[ht]
\centering
\begin{tabular}{rl}
  \toprule
Group & Aminoacids \\ 
  \midrule
  1 & G \\ 
   \rowcolor[gray]{0.85}  2 & K, P, R \\ 
   \rowcolor{blue!20} 3 & I, L, V \\ 
   \rowcolor{blue!20}  4 & F, W, Y \\ 
    5 & A, C, H, M \\ 
   \rowcolor[gray]{0.85}  6 & D, E, N, Q, S, T \\ 
   \bottomrule
\end{tabular}
\end{table}
   
Grupy 3 i 4 - hydrophobic aminoacids.  
\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}
   \end{frame}
  
  
     \begin{frame}{Best-performing simplified alphabet}
   \begin{table}[ht]
\centering
\begin{tabular}{rl}
  \toprule
Group & Aminoacids \\ 
  \midrule
  1 & G \\ 
   \rowcolor{red!20}  2 & K, P, R \\ 
    3 & I, L, V \\ 
   \rowcolor[gray]{0.85}  4 & F, W, Y \\ 
    5 & A, C, H, M \\ 
   \rowcolor[gray]{0.85}  6 & D, E, N, Q, S, T \\ 
   \bottomrule
\end{tabular}
\end{table}
   
Group 2 - aminoacids disrupting the $\beta$-structure. 
   \btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}
   \end{frame}  


\begin{frame}{Alphabet similarity and quality of prediction}
% Czy alfabety podobne do najlepszego uproszczonego alfabetu również wspierają przewidywania amyloidów?
Do alphabets similar to the best simplified alphabet also support amyloid predictions?
\end{frame}

\begin{frame}{Similarity index}
<<echo = FALSE,message=FALSE,fig.align='center',fig.height=4,warning=FALSE>>=
si_dat <- read.csv2("si_dat.csv")

levels(si_dat[["et"]]) <- c("Best-performing simplified alphabet", "Simplified alphabet", 
                             "Full alphabet", "Standard simplified alphabet", 
                            "Standard simplified alphabet")



simil_plot <- ggplot(si_dat, aes(x=si, y=AUC_mean)) + 
  # geom_point(data = si_dat, 
  #            aes(x = si, y = AUC_mean, color = et, shape = et), size = 4) +
  #geom_density_2d(color = "black", contour = TRUE) +
    geom_bin2d(bins = 30) +
  # stat_density2d(aes(fill=..level..), color = "black",
  #                contour = TRUE, geom = "polygon", alpha = 0.5, binwidth = 50, bins = 10) +
  scale_fill_continuous("Number of alphabets", low = "gold", high = "goldenrod4") +
  xlab("Similarity index") +
  ylab("AUC") +
  my_theme +
  geom_point(data = droplevels(filter(si_dat, et != "Simplified alphabet")),
             aes(x = si, y = AUC_mean, color = et, shape = et), size = 4) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2), 
         fill = guide_colorbar(barwidth = unit(5, "line"))) +
  scale_shape_manual("", values = c(16, 15, 15), drop = FALSE) +
  scale_color_manual("", values = c("red", "green", "blue"), drop = FALSE) +
  theme(panel.grid.major = element_line(color = "lightgrey", size = 0.5)) 

print(simil_plot)
@
Similarity index~\citep{stephenson_unearthing_2013} measures the similarity between two simplified alphabets (1:~identical alphabets, 0:~completely dissimilar alphabets).

\end{frame}



\begin{frame}{Similarity index}
<<echo = FALSE,message=FALSE,fig.align='center',fig.height=4,warning=FALSE>>=
print(simil_plot)
@
The correlation between the similarity index and the average AUC is important ($\textrm{p-value} \leq 2.2^{-16}$; $\rho = 0.51$).

\btVFill

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}
\end{frame}

\begin{frame}{}
Are the informative n-grams found by QuiPT are connected with amyloidogenicity?
\end{frame}


\begin{frame}{Informative n-grams}
<<echo = FALSE,message=FALSE,fig.align='center',fig.height=3.5,warning=FALSE>>=
ngram_freq <- read.csv("ngram_freq.csv")

ngram_freq_plot <- mutate(ngram_freq, decoded_name = gsub("_", "-", decoded_name)) %>%
  mutate(decoded_name = factor(decoded_name, levels = as.character(decoded_name)),
         amyloid = diff_freq > 0) %>%
  melt() %>%
  filter(variable %in% c("pos", "neg"),
         association != "Not found") %>%
  droplevels %>%
  mutate(variable = factor(variable, labels = c("Amyloid", "Nonamyloid")),
         association = factor(association, levels = c("Amyloidogenic", "nonamyloidogenic")))

select(ngram_freq_plot, -association) %>% 
  dcast(decoded_name ~ variable) %>% 
  mutate(log_odd = log(Amyloid/Nonamyloid)) %>% 
  ggplot(aes(x = decoded_name, y = log_odd)) +
  geom_col() +
  scale_y_continuous("Log odds ratio") +
  scale_x_discrete("") +
  my_theme  

@

% Spośród 65 najbardziej informatywnych n-gramów, 15 (23\%) jest również obecnych w motywach aminokwasowych znalezionych ekperymentalnie~\citep{paz_sequence_2004}.

Of the 65 most informative n-grams, 15 (23\%) are also present in amino acid motifs found experimentally ~\citep{paz_sequence_2004}.

\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}
\end{frame}


\begin{frame}{Benchmark with other software}

\begin{table}[ht]
\centering

\begin{tabular}{ccccc}
  \toprule
Program & AUC & MCC \\ 
  \midrule
AmyloGram & \textbf{0.8972} & \textbf{0.6307} \\ 
  \rowcolor{white}PASTA 2.0 \citep{walsh_pasta_2014} & 0.8550 & 0.4291  \\ 
   FoldAmyloid \citep{garbuzynskiy_foldamyloid:_2010} & 0.7351 & 0.4526  \\ 
  \rowcolor{white}APPNN \citep{familia_prediction_2015} & 0.8343 & 0.5823  \\ 
   \bottomrule
\end{tabular}
\end{table}

The classifier trained using the best simplified alphabet, AmyloGram, has been compared with other amyloid prediction tools using an external dataset \textit{pep424}.
\btVFill
\tiny{Burdukiewicz, M., Sobczyk, P., Rödiger, S., Duda-Madej, A., Mackiewicz, P., and Kotulska, M. (2017). Amyloidogenic motifs revealed by n-gram analysis. Scientific Reports 7, 12961}


\end{frame}

% \begin{frame}{Benchmark results}
% 
% \begin{table}[ht]
% \centering
% 
% \begin{tabular}{ccccc}
%   \toprule
% Classifier & AUC & MCC \\ 
%   \midrule
% AmyloGram & \textbf{0.8972} & \textbf{0.6307} \\ 
%   \rowcolor{white}PASTA 2.0 \citep{walsh_pasta_2014} & 0.8550 & 0.4291  \\ 
%    FoldAmyloid \citep{garbuzynskiy_foldamyloid:_2010} & 0.7351 & 0.4526  \\ 
%   \rowcolor{white}APPNN \citep{familia_prediction_2015} & 0.8343 & 0.5823  \\ 
%    \bottomrule
% \end{tabular}
% \end{table}
% 
% MCC (Matthew's Correlation Coefficient) measures the performance of a classifier (1 - classifier always properly recognizes amyloid proteins, -1 - classifier never properly recognizes amyloid proteins).
% 
% \end{frame}



\begin{frame}{Experimental validation}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/diagram1.eps}
\end{figure}
\end{frame}

\begin{frame}{Experimental validation}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/diagram2.eps}
\end{figure}
\end{frame}

\begin{frame}{New amyloid}

\includegraphics[width=0.75\textwidth]{static_figure/line.jpg}

A new functional amyloid produced by Methanospirillum sp. \citep{10.3389/fmicb.2018.02729} was selected for \textit{in vitro} analysis by AmyloGram.

\end{frame}

\section{Shiny aplication}

\begin{frame}{AmyloGram web server}

\includegraphics[width=1.0\textwidth]{static_figure/shiny_amylogram1.png}

\end{frame}

\begin{frame}{AmyloGram web server}

\includegraphics[width=1.0\textwidth]{static_figure/shiny_amylogram2.png}

\end{frame}

\begin{frame}{AmyloGram web server}

\includegraphics[width=1.0\textwidth]{static_figure/shiny_amylogram3.png}

\end{frame}

% \section{Other applications}
% 
% \begin{frame}{Signal peptides}
% 
% \begin{figure} 
% \includegraphics[width=0.75\textwidth]{static_figure/SP.eps}
% \end{figure}
% 
% Signal peptides~\citep{hegde_surprising_2006}:
%         \begin{itemize}[<+->]
%           \item short (20-30 residuals) N-terminal protein fragments forming $\alpha$-helices,
%             \item they direct proteins to the intracellular matrix and then for secretion or cell compartiments,
%             \item very variable, but always containing three characteristic domains.
%         \end{itemize}
% \end{frame}
% 
% 
% 
% %Peptydy sygnałowe rozpoczynają się naładowanym dodatnio n-regionem, po którym występuje hydrofobowy h-region i c-region zakończony miejscem cięcia rozpoznawanym przez peptydazę sygnałową. 
% 
%   
% \begin{frame}{Signal peptides}  
% % Skład aminokwasowy peptydów sygnałowych u \textit{Plasmodium} sp. (do których należy m. in. zarodziec malarii) jest inny od składu peptydów sygnałowych dobrze poznanych eukariontów. 
% The aminoacid composition of signal peptides in \textit{Plasmodium} sp. (ex. \textit{Plasmodium malariae}, wchich causes malaria) is different from that of the signal peptides of well known eukaryotes. 
% <<echo = FALSE, message=FALSE,warning=FALSE,fig.height=3.5,results='asis'>>=
% plot_pca(pca_full)
%   #ggtitle("PCA częstości aminokwasów w peptydach sygnałowych")
% @  
% 
% PCA aminoacid frequency.
% \end{frame}  
% 
% \begin{frame}{signalHsmm}
% 
% signalHsmm \citep{BurdukiewiczPredictionSignalPeptides2018}: use of hidden semi-Mark models and simplified aminoacid alphabets to predict signal peptides in \textit{Plasmodium} sp. proteins.
%  
% \begin{figure} 
% \includegraphics[width=0.75\textwidth]{static_figure/HSMMs.eps}
% \end{figure}
% 
% \end{frame}
% 
% \begin{frame}{Benchmark with other predictors}
% 
% \begin{table}[H]
% \centering
% \small
% \begin{tabular}{rllll}
%   \toprule
% Algorithm & Sensitivity & Specificity & MCC & AUC \\ 
%   \midrule
% signalP 4.1 (no tm) & 0.8235 & 
% 0.9100 & 0.6872 & 
% 0.8667 \\ 
%    \rowcolor[gray]{0.85}signalP 4.1 (tm) 
% & 0.6471 & 
% 0.9431 & 0.6196 & 0.7951 \\ 
%   signalP 3.0 (NN) & 0.8824 
% & 0.9052 & 0.7220 & 
% 0.8938 \\ 
%    \rowcolor[gray]{0.85}signalP 3.0 (HMM) 
%  & 0.6275 & 
% 0.9194 & 0.5553 & 0.7734 \\ 
%   PrediSi & 0.3333 & \textbf{0.9573} 
% & 0.3849 & 0.6453 
% \\ 
%    \rowcolor[gray]{0.85}Philius 
% & 0.6078 & 
% 0.9336 & 0.5684 & 0.7707 \\ 
%   Phobius & 0.6471 & 0.9289 & 
% 0.5895 & 0.7880 \\ 
%    \rowcolor[gray]{0.85}signalHsmm-2010 & \textbf{0.9804} & 0.8720 & \textbf{0.7409} & \textbf{0.9262} \\ 
%    \bottomrule
% \end{tabular}
% \end{table}
% 
% \tiny Burdukiewicz, M., Sobczyk, P., Chilimoniuk, J., Gagat, P., and Mackiewicz, P. (2018). Prediction of Signal Peptides in Proteins from Malaria Parasites. International Journal of Molecular Sciences 19, 3709.
% 
% \end{frame}
% 
% 
% \begin{frame}{Methanogram: predicting methanogens \mbox{culturing} conditions}
% 
% % Metanogeny to złożona grupa archebakterii produkujących metan o zróżnicowanych wymaganiach hodowlanych. Methanogram umożliwia przewidywanie warunków hodowlanych metanogenów na podstawie ich informacji genetycznej.
% Methanogens are a complex group of archaeobacteria producing methane with different culturing requirements. A methanogram allows the prediction of the culturing conditions of a methanogens based on its genetic information.
% 
% \begin{figure} 
% \includegraphics[width=0.58\textwidth]{static_figure/methanogens.jpg}
% \end{figure}
% 
% \footnotesize
% Metanogeny. Maryland Astrobiology Consortium, NASA, and STScI.
% 
% \end{frame}
% 
% 
% \begin{frame}{Methanogram: predicting methanogens \mbox{culturing} conditions}
% 
% \begin{figure} 
% \includegraphics[width=0.62\textwidth]{static_figure/Figure2.eps}
% \end{figure}
% 
% \tiny{Burdukiewicz, M., Gagat, P., Jabłoński, S., Chilimoniuk, J., Gaworski, M., Mackiewicz, P., and Łukaszewicz, M. (2018). PhyMet2: a database and toolkit for phylogenetic and metabolic analyses of methanogens. Environmental Microbiology Reports 10, 378–382.}
% 
% \end{frame}



% \begin{frame}{Podsumowanie}
% \small\begin{itemize}
% \item Zastosowanie n-gramów (k-merów), czyli ciągów aminokwasów lub nukleotydów o długości $n$ okazało się skuteczne do charakterystyki sekwencji peptydów sygnałowych i amyloidogennych oraz markerów molekularnych metanogenów, a następnie do przewidywania tych peptydów oraz optymalnych warunków hodowli metanogenów w oparciu o te markery.
% \item Zastosowanie uproszczonych alfabetów aminokwasowych, w których aminokwasy są grupowane ze względu na swoje podobieństwo fizykochemiczne lub funkcjonalne, okazało się bardzo dobrym podejściem do opisu sekwencji aminokwasowych o zróżnicowanym składzie i wyeksponowania ich cech istotnych do przewidywania peptydów sygnałowych i amyloidogennych.
% \item Opracowana procedura QuiPT (\textbf{Qui}ck \textbf{P}ermutation \textbf{T}est) pozwala na szybki wybór najbardziej informatywnych n-gramów i uzyskiwanie dokładnych p-wartości.
% \item Zastosowana metodologia tworzenia uproszczonych alfabetów umożliwia identyfikowania kluczowych cech związanych z charakterystycznymi cechami peptydów.
% \end{itemize}
% \end{frame}

\begin{frame}{Summarise()}

Web servers:
\begin{itemize}
\item \textbf{AmyloGram}: \url{http://www.smorfland.uni.wroc.pl/shiny/AmyloGram/}.
% \item \textbf{MethanoGram}: \url{http://www.smorfland.uni.wroc.pl/shiny/MethanoGram/}.
% \item \textbf{signalHsmm}: \url{http://www.smorfland.uni.wroc.pl/shiny/signalHsmm/}.
\end{itemize}


\textbf{R} packages:
\begin{itemize}
\item \textbf{AmyloGram}: \url{https://cran.r-project.org/package=AmyloGram}.
\item \textbf{biogram}: \url{https://cran.r-project.org/package=biogram}.
% \item \textbf{signalHsmm}: \url{https://cran.r-project.org/package=signalHsmm}.
\end{itemize}
\end{frame}  

\begin{frame}{Summarise()}

% Modele przewidujące właściwości białek mogą opierać się na regułach precyzyjnych zrozumiałych dla biologów i weryfikowalnych eksperymentalnie nie tracąc na swojej skuteczności.
Models predicting the properties of proteins may be based on precise rules that are understandable to biologists and experimentally verifiable without losing their effectiveness.

\end{frame}

% \begin{frame}{Podsumowanie}
% \begin{figure} 
% \includegraphics[width=0.75\textwidth]{static_figure/r1.png}
% \includegraphics[width=0.75\textwidth]{static_figure/r2.png}
% \end{figure}
% \end{frame}


\begin{frame}{Acknowledgements}

\begin{itemize}
\item Michał Burdukiewicz (Politechnika Warszawska).
\item Małgorzata Kotulska (Politechnika Wrocławska).
\item Stefan Rödiger (Brandenburg University of Technology Cottbus-Senftenberg).
\item Paweł Mackiewicz (Uniwersytet Wrocławski).
\item Piotr Sobczyk (Politechnika Wrocławska).
\end{itemize}
\end{frame}


\begin{frame}{Acknowledgements}
Funding:
\begin{itemize}
\item Polish National Science Centre (2015/17/N/NZ2/01845 i 2017/24/T/NZ2/00003).
\item COST ACTION CA15110 (Harmonising standardisation strategies to increase efficiency and competitiveness of European life-science research).
\item KNOW Wrocław Center for Biotechnology.
\item German Federal Ministry of Education and Research (InnoProfile-Transfer-Projekt 03IPT611X).
\end{itemize}

\end{frame}

% \begin{frame}{MI$^2$ Data Lab}
% 
% MI$^2$ Data Lab (\url{https://mi2.mini.pw.edu.pl/}), Wydział Matematyki i Nauk Informatycznych, Politechnika Warszawska.
% 
% \begin{figure} 
% \includegraphics[width=0.75\textwidth]{static_figure/mi2.png}
% \end{figure}
% 
% Kontakt: \url{michalburdukiewicz@gmail.com}.
% 
% \end{frame}

\begin{frame}[allowframebreaks]
        \frametitle{References}
  \bibliographystyle{apalike}
  \bibliography{references}
\end{frame}  


\end{document}